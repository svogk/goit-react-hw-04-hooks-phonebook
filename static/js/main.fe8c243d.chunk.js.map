{"version":3,"sources":["components/Filter/Filter.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Filter","filter","onChange","className","s","type","name","value","ContactForm","onAddContact","onCheckContact","useState","setName","number","setNumber","handleChange","event","target","validateForm","trim","alert","reset","form","onSubmit","preventDefault","id","uuidv4","htmlFor","input","placeholder","autoFocus","ContactListItem","onDelete","item","button","onClick","protoTypes","PropTypes","string","isRequired","func","propTypes","contacts","arrayOf","shape","ContactList","length","map","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","initialContacts","setContacts","setFilter","visibleContacts","contact","toLowerCase","includes","newContact","isExistContact","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,OAAS,yB,maCiBZC,EAdA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACxB,OACE,gCACE,mBAAGC,UAAWC,IAAEH,OAAhB,mCACA,uBAAOI,KAAK,OAAOC,KAAK,SAASC,MAAON,EAAQC,SAAUA,Q,wBC4EjDM,MA/Ef,YAAwD,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAAkB,EAC7BC,mBAAS,IADoB,mBAC9CL,EAD8C,KACxCM,EADwC,OAEzBD,mBAAS,IAFgB,mBAE9CE,EAF8C,KAEtCC,EAFsC,KAI/CC,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBX,EADoB,EACpBA,KAAMC,EADc,EACdA,MACd,OAAQD,GACN,IAAK,OACHM,EAAQL,GACR,MACF,IAAK,SACHO,EAAUP,GACV,MACF,QACE,SAeAW,EAAe,SAACZ,EAAMO,GAC1B,OAAKP,EAAKa,QAAWN,EAAOM,OAIrBT,EAAeJ,IAHpBc,MAAM,wOACC,IAKLC,EAAQ,WACZT,EAAQ,IACRE,EAAU,KAGZ,OACE,8BACE,uBAAMX,UAAWC,IAAEkB,KAAMC,SA1BR,SAAAP,GACnBA,EAAMQ,iBACiBN,EAAaZ,EAAMO,IAK1CJ,EAAa,CAAEgB,GAAIC,cAAUpB,OAAMO,WACnCQ,KAJEA,KAsBA,UACE,wBAAOM,QAAQ,GAAf,iBAEE,uBACExB,UAAWC,IAAEwB,MACbvB,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPuB,YAAY,iHACZ3B,SAAUa,EACVe,WAAS,OAGb,wBAAOH,QAAQ,GAAf,mBAEE,uBACExB,UAAWC,IAAEwB,MACbvB,KAAK,MACLC,KAAK,SACLC,MAAOM,EACPgB,YAAY,6HACZ3B,SAAUa,OAGd,uD,gCCrEFgB,EAAkB,SAAC,GAAoC,IAAlCN,EAAiC,EAAjCA,GAAInB,EAA6B,EAA7BA,KAAMO,EAAuB,EAAvBA,OAAQmB,EAAe,EAAfA,SAC3C,OACE,qBAAI7B,UAAWC,IAAE6B,KAAjB,UACG3B,EADH,KACWO,EACT,wBAAQV,UAAWC,IAAE8B,OAAQ7B,KAAK,SAAS8B,QAAS,kBAAMH,EAASP,IAAnE,wBAONM,EAAgBK,WAAa,CAC3B9B,KAAM+B,IAAUC,OAAOC,WACvB1B,OAAQwB,IAAUC,OAAOC,WACzBP,SAAUK,IAAUG,KAAKD,YAGZR,QCAfA,EAAgBU,UAAY,CAC1BC,SAAUL,IAAUM,QAClBN,IAAUO,MAAM,CAAEnB,GAAIY,IAAUxB,OAAO0B,eAI5BM,MAvBK,SAAC,GAA4B,IAA1BH,EAAyB,EAAzBA,SAAUV,EAAe,EAAfA,SAC/B,OAAwB,IAApBU,EAASI,OAAqB,KAEhC,6BACGJ,EAASK,KAAI,gBAAGtB,EAAH,EAAGA,GAAInB,EAAP,EAAOA,KAAMO,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEP,KAAMA,EACNO,OAAQA,EACRmB,SAAUA,EACVP,GAAIA,GAJCA,SCIAuB,EAZS,SAACC,EAAKC,GAAkB,IAAD,EACnBvC,oBAAS,WAAO,IAAD,EACvC,iBAAOwC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA9C,QAAuDC,KAFZ,mBACtCM,EADsC,KAC/BC,EAD+B,KAS7C,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQ,WAAYR,KAAKS,UAAUJ,MACtD,CAACP,EAAKO,IAEF,CAACA,EAAOC,I,QC0CFI,MA7Cf,WAAgB,IAAD,EACmBb,EAAgB,WAAYc,GAD/C,mBACNpB,EADM,KACIqB,EADJ,OAEepD,mBAAS,IAFxB,mBAENV,EAFM,KAEE+D,EAFF,KA6BPC,EALGvB,EAASzC,QAAO,SAAAiE,GAAO,OAC5BA,EAAQ5D,KAAK6D,cAAcC,SAASnE,EAAOkE,kBAM/C,OACE,gCACE,2CACA,cAAC,EAAD,CACE1D,aA/BsB,SAAA4D,GAC1BN,EAAY,GAAD,mBAAKrB,GAAL,CAAe2B,MA+BtB3D,eA5BqB,SAAAJ,GACzB,IAAMgE,IAAmB5B,EAAS6B,MAAK,SAAAL,GAAO,OAAIA,EAAQ5D,OAASA,KAInE,OAHIgE,GACFlD,MAAM,2MAEAkD,KAyBN,0CACA,cAAC,EAAD,CAAQrE,OAAQA,EAAQC,SApBP,SAAAc,GACnBgD,EAAUhD,EAAMC,OAAOV,UAoBrB,cAAC,EAAD,CAAamC,SAAUuB,EAAiBjC,SAxBhB,SAAAP,GAAE,OAC5BsC,EAAYrB,EAASzC,QAAO,SAAAiE,GAAO,OAAIA,EAAQzC,KAAOA,aCb3C+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA1E,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,kBCA3DD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,mC","file":"static/js/main.fe8c243d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3wIHq\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      <p className={s.filter}>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onAddContact, onCheckContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValidateForm = validateForm(name, number);\n    if (!isValidateForm) {\n      reset();\n      return;\n    }\n    onAddContact({ id: uuidv4(), name, number });\n    reset();\n  };\n\n  const validateForm = (name, number) => {\n    if (!name.trim() || !number.trim()) {\n      alert('Для добавления контакта заполните поля Name и Number');\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Введите имя контакта\"\n            onChange={handleChange}\n            autoFocus\n          />\n        </label>\n        <label htmlFor=\"\">\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Введите номер контакта\"\n            onChange={handleChange}\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func,\n  onCheckContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={s.item}>\n      {name}: {number}\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.protoTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n          id={id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\n  ),\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nimport initialContacts from './data/contacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const handleAddNewContact = newContact => {\n    setContacts([...contacts, newContact]);\n  };\n\n  const handleCheckContact = name => {\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  const handleDeleteContact = id =>\n    setContacts(contacts.filter(contact => contact.id !== id));\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const getVisibleContact = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm\n        onAddContact={handleAddNewContact}\n        onCheckContact={handleCheckContact}\n      />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={handleFilter} />\n      <ContactList contacts={visibleContacts} onDelete={handleDeleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1L68T\",\"input\":\"ContactForm_input__3EZYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__33Jpz\",\"button\":\"ContactListItem_button__1BU3X\"};"],"sourceRoot":""}